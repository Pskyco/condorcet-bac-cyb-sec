@using WebApplication.Entities.Enums
@model PcrTestViewModel

@{
    ViewData["Title"] = Model.Id == Guid.Empty ? "Créer un test PCR" : "Modifier un test PCR";
}

<h2>@ViewData["Title"]</h2>

<form action="@Url.Action("Edit")" id="pcrTestForm" method="post">
    <input type="hidden" asp-for="Id"></input>
    <div class="form-group">
        <label asp-for="Code">Code</label>
        <input type="text" class="form-control" asp-for="Code" placeholder="Entrer le code">
        <span asp-validation-for="Code" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Result">Résultat</label>
        <select class="form-control" asp-for="Result" asp-items="Html.GetEnumSelectList<ResultEnum>()">
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Comment">Commentaire</label>
        <textarea class="form-control" asp-for="Comment" placeholder="Entrer le commentaire" rows="2"></textarea>
    </div>
    <div class="form-group">
        <label asp-for="ReceptionDate">Date de réception</label>
        <input type="date" class="form-control" asp-for="ReceptionDate">
    </div>
    <div class="form-group">
        <label asp-for="AnalysisDate">Date d'analyse</label>
        <input type="datetime-local" class="form-control" asp-for="AnalysisDate">
    </div>
    <div class="form-group">
        <label asp-for="PerformerPersonId">Réalisé par</label>
        <select class="form-control" asp-for="PerformerPersonId" asp-items="Model.SliPersons">
            <option value="">-- Choisir une personne --</option>
        </select>
    </div>
    <button type="button" onclick="history.go(-1)" class="btn btn-secondary">Retour</button>
    <button type="submit" class="btn btn-primary">Sauvegarder</button>
    @* <button type="button" onclick="sendForm()" class="btn btn-primary">Sauvegarder</button> *@
</form>

<script>
    // function sendForm(){
    //     $.ajax({
    //         url: '@Url.Action("Edit", "PcrTest")',
    //         data: $("#pcrTestForm").serialize(),
    //         method: 'POST',
    //         beforeSend: function () {
    //             // $("#loading").toggle();
    //             $("#loading").show();
    //             // $("#loading").hide();
    //         },
    //         success: function (data) {
    //             console.log(data);
    //         },
    //         error: function(jqXHR, exception) {
    //             if (jqXHR.status === 0) {
    //                 alert('Not connect.\n Verify Network.');
    //             } else if (jqXHR.status == 404) {
    //                 alert('Requested page not found. [404]');
    //             } else if (jqXHR.status == 500) {
    //                 alert('Internal Server Error [500].');
    //             } else if (exception === 'parsererror') {
    //                 alert('Requested JSON parse failed.');
    //             } else if (exception === 'timeout') {
    //                 alert('Time out error.');
    //             } else if (exception === 'abort') {
    //                 alert('Ajax request aborted.');
    //             } else {
    //                 alert('Uncaught Error.\n' + jqXHR.responseText);
    //             }
    //         },
    //         complete: function () {
    //             $("#loading").hide();
    //         }
    //     });
    // }
</script>
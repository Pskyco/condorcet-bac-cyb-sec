// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Infrastructure.Contexts;

namespace WebApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211027191128_AddPerformerPerson")]
    partial class AddPerformerPerson
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("WebApplication.Entities.Observation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("date()");

                    b.Property<Guid>("PcrTestId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PcrTestId");

                    b.ToTable("Observations");
                });

            modelBuilder.Entity("WebApplication.Entities.PcrTest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AnalysisDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PerformerPersonId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReceptionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PerformerPersonId");

                    b.ToTable("PcrTests");
                });

            modelBuilder.Entity("WebApplication.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5a14f59-90ea-48a7-b781-6971e505d250"),
                            FirstName = "Ludwig",
                            LastName = "Lebrun"
                        },
                        new
                        {
                            Id = new Guid("e52b7f76-c61e-4f24-8f44-edb381e3df50"),
                            FirstName = "Hicham",
                            LastName = "Erradi"
                        });
                });

            modelBuilder.Entity("WebApplication.Entities.Observation", b =>
                {
                    b.HasOne("WebApplication.Entities.PcrTest", "PcrTest")
                        .WithMany("Observations")
                        .HasForeignKey("PcrTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PcrTest");
                });

            modelBuilder.Entity("WebApplication.Entities.PcrTest", b =>
                {
                    b.HasOne("WebApplication.Entities.Person", "PerformerPerson")
                        .WithMany("PerformedPcrTests")
                        .HasForeignKey("PerformerPersonId");

                    b.Navigation("PerformerPerson");
                });

            modelBuilder.Entity("WebApplication.Entities.PcrTest", b =>
                {
                    b.Navigation("Observations");
                });

            modelBuilder.Entity("WebApplication.Entities.Person", b =>
                {
                    b.Navigation("PerformedPcrTests");
                });
#pragma warning restore 612, 618
        }
    }
}
